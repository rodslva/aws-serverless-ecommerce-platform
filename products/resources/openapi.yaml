openapi: "3.0.2"
info:
  title:
    Fn::Sub: "${AWS::StackName}-api"
  version: 1.0.0
  description: Products service API definition
  license:
    name: MIT-0
    url: https://github.com/aws/mit-0

paths:
#  /backend/validate:
#    post:
#      description: |
#        Validates an array of products.
#
#        __Remark__: This is an internal API that requires valid IAM credentials
#        and signature.
#      operationId: backendValidateProducts
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: "../../shared/resources/schemas.yaml#/Products"
#      responses:
#        "200":
#          description: OK
#          content:
#            application/json:
#              schema:
#                allOf:
#                  - type: object
#                    properties:
#                      # By not using the 'Products' schema, it makes products optional
#                      products:
#                        $ref: "../../shared/resources/schemas.yaml#/Product"
#                  - $ref: "../../shared/resources/schemas.yaml#/Message"
#        default:
#          description: Error
#          content:
#            application/json:
#              schema:
#                $ref: "../../shared/resources/schemas.yaml#/Message"
#      x-amazon-apigateway-auth:
#        type: AWS_IAM
#      x-amazon-apigateway-integration:
#        httpMethod: "POST"
#        type: aws_proxy
#        uri:
#          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ValidateFunction.Arn}/invocations"

  /backend/create:
    post:
      description: |
        Create a Product.
        
        __Remark__: This is an internal API that requires valid IAM credentials
        and signature.
      operationId: backendCreateProducts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../../shared/resources/schemas.yaml#/Products"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      # By not using the 'Products' schema, it makes products optional
                      products:
                        $ref: "../../shared/resources/schemas.yaml#/Product"
                  - $ref: "../../shared/resources/schemas.yaml#/Message"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "../../shared/resources/schemas.yaml#/Message"
      x-amazon-apigateway-auth:
        type: NONE
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        type: aws_proxy
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateFunction.Arn}/invocations"

  /backend/get/{productId}:
    get:
      description: |
        Get a Product.
        
        __Remark__: This is an internal API that requires valid IAM credentials
        and signature.
      operationId: backendGetProduct
      parameters:
        - name: productId
          in: path
          description: Product ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      # By not using the 'Products' schema, it makes products optional
                      products:
                        $ref: "../../shared/resources/schemas.yaml#/Product"
                  - $ref: "../../shared/resources/schemas.yaml#/Message"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "../../shared/resources/schemas.yaml#/Message"
      x-amazon-apigateway-auth:
        type: NONE
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        type: aws_proxy
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetFunction.Arn}/invocations"
